#!/bin/bash
set -x
set -e

BootstrapPlatform() {
  pushd $DOTCONF > /dev/null
  git remote set-url origin git@github.com:kfatehi/.conf.git
  popd > /dev/null
  MY_DOTFILES=$DOTCONF/dotfiles
  MY_BINS=$DOTCONF/bin
  source $DOTCONF/platform/$1/bootstrap.sh
}

SetDotconfPath() {
  # http://stackoverflow.com/questions/1055671/how-can-i-get-the-behavior-of-gnus-readlink-f-on-a-mac
  TARGET_FILE=$0

  cd `dirname $TARGET_FILE`
  TARGET_FILE=`basename $TARGET_FILE`

  # Iterate down a (possible) chain of symlinks
  while [ -L "$TARGET_FILE" ]
  do
    TARGET_FILE=`readlink $TARGET_FILE`
    cd `dirname $TARGET_FILE`
    TARGET_FILE=`basename $TARGET_FILE`
  done

  # Compute the canonicalized name by finding the physical path 
  # for the directory we're in and appending the target file.
  PHYS_DIR=`pwd -P`
  RESULT=$PHYS_DIR/$TARGET_FILE
  DOTCONF=$(dirname $RESULT)
}

DeterminePlatform() {
  PLATFORM="unknown"
  case `uname` in
    Linux)
      if [ -f /etc/arch-release ] ; then
        PLATFORM="archlinux"
      elif [ -f /etc/lsb-release ]; then
        PLATFORM="ubuntu"
      fi
      ;;
    Darwin)
      PLATFORM="darwin"
      ;;
    MINGW32*)
      PLATFORM="win32"
      ;;
  esac
  if [ "$PLATFORM" = "unknown" ]; then
    echo "Unknown platform!"
    return -1
  else
    echo "Platform: $PLATFORM"
  fi
}

UpdatePackageManagers() {
  case $PLATFORM in 
    archlinux)
      echo "Invoking pacman to synchronize package list"
      sudo pacman -Sy
      return $?
      ;;
    ubuntu)
      echo "Updating apt packages ..."
      AptUpdatedToday || UpdateAptRepositories
      return $?
      ;;
    darwin)
      if hash brew > /dev/null 2>&1; then
        echo "Updating brew packages ..."
        brew update
      else
        echo "Installing brew"
        ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
      fi
      return $?
      ;;
  esac
}

RequirePackage() {
  hash $1 >/dev/null 2>&1 || {
    case $PLATFORM in 
      archlinux)
        sudo pacman -S $1
        return $?
        ;;
      ubuntu)
        DEBIAN_FRONTEND=noninteractive sudo apt-get install -y $1
        return $?
        ;;
      darwin)
        brew install -y $1
        return $?
        ;;
    esac
  }
}

GetRequirements() {
  RequirePackage "git" && test -d $HOME/.conf || git clone https://github.com/kfatehi/.conf $HOME/.conf
}

AptUpdatedToday() {
  # won't work on darwin due to `stat` differences
  # but i guess you could use ruby there
  local stampFile=/var/lib/apt/periodic/update-success-stamp
  if [[ -f $stampFile ]]; then
    local stampstring=$(stat -c %y $stampFile)
    local stamp=$(date --date="$stampstring" +"%s")
    local now=$(date --date="$(date)" +"%s")
    local diff=$(echo "$now - $stamp" | bc)
    local aday=86400
    test $diff -lt $aday
  else
    return 1
  fi
}

UpdateAptRepositories() {
  echo "Updating apt repositories ... "
  DEBIAN_FRONTEND=noninteractive sudo apt-get update -qq
}

DeterminePlatform && UpdatePackageManagers && GetRequirements && case $PLATFORM in
  archlinux)
    DOTCONF=$(dirname $(readlink -f $0))
    BootstrapPlatform "archlinux"
    ;;
  ubuntu)
    DOTCONF=$(dirname $(readlink -f $0))
    BootstrapPlatform "deb"
    ;;
  darwin)
    SetDotconfPath
    BootstrapPlatform "osx"
    ;;
  win32)
    SetDotconfPath
    BootstrapPlatform "win32"
    ;;
  *)
    echo "Unsupported platform!"
    ;;
esac
